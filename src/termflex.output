Terminals unused in grammar

   THEN
   MULT
   DIVISION
   DOT


State 70 conflicts: 1 shift/reduce
State 116 conflicts: 2 shift/reduce
State 120 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 138 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: MAINPROG ID SEMI declarations subprogram_declarations compound_statement

    2 declarations: type identifier_list SEMI declarations
    3             | EPSILON

    4 identifier_list: ID
    5                | ID COMMA identifier_list

    6 type: standard_type
    7     | standard_type BOPEN num BCLOSE

    8 num: INTNUM
    9    | FLOATNUM

   10 standard_type: INT
   11              | FLOAT

   12 subprogram_declarations: subprogram_declaration subprogram_declarations
   13                        | EPSILON

   14 subprogram_declaration: subprogram_head declarations compound_statement

   15 subprogram_head: FUNCTION ID arguments COLON standard_type SEMI
   16                | PROCEDURE ID arguments SEMI

   17 arguments: POPEN parameter_list PCLOSE
   18          | EPSILON

   19 parameter_list: identifier_list COLON type
   20               | identifier_list COLON type SEMI parameter_list

   21 compound_statement: BEGIN statement_list END

   22 statement_list: statement
   23               | statement SEMI statement_list

   24 statement: variable ASSIGN expression
   25          | print_statement
   26          | procedure_statement
   27          | compound_statement
   28          | if_statement
   29          | while_statement
   30          | for_statement
   31          | RETURN expression
   32          | NOP

   33 if_statement: IF expression COLON statement
   34             | IF expression COLON statement elif_statement

   35 elif_statement: ELIF expression COLON statement
   36               | ELSE COLON statement
   37               | ELIF expression COLON statement elif_statement

   38 while_statement: WHILE expression COLON statement
   39                | WHILE expression COLON statement ELSE statement

   40 for_statement: FOR expression IN expression COLON statement
   41              | FOR expression IN expression COLON statement ELSE statement

   42 print_statement: PRINT
   43                | PRINT POPEN expression PCLOSE

   44 variable: ID
   45         | ID BOPEN expression BCLOSE

   46 procedure_statement: ID POPEN actual_parameter_expression PCLOSE

   47 actual_parameter_expression: EPSILON
   48                            | expression_list

   49 expression_list: expression
   50                | expression COMMA expression_list

   51 expression: simple_expression
   52           | simple_expression relop simple_expression

   53 simple_expression: term
   54                  | term addop simple_expression

   55 term: factor
   56     | factor multop term

   57 factor: INTNUM
   58       | FLOATNUM
   59       | variable
   60       | procedure_statement
   61       | NOT factor
   62       | sign factor

   63 sign: PLUS
   64     | MINUS

   65 relop: ELARGER
   66      | LARGER
   67      | ESMALLER
   68      | SMALLER
   69      | EQUAL
   70      | NEQUAL
   71      | IN

   72 addop: '+'
   73      | '-'

   74 multop: '*'
   75       | '/'


Terminals, with rules where they appear

$end (0) 0
'*' (42) 74
'+' (43) 72
'-' (45) 73
'/' (47) 75
error (256)
INTNUM (258) 8 57
ID (259) 1 4 5 15 16 44 45 46
INT (260) 10
FLOAT (261) 11
FLOATNUM (262) 9 58
MAINPROG (263) 1
FUNCTION (264) 15
PROCEDURE (265) 16
BEGIN (266) 21
END (267) 21
IF (268) 33 34
THEN (269)
ELSE (270) 36 39 41
NOP (271) 32
WHILE (272) 38 39
RETURN (273) 31
PRINT (274) 42 43
IN (275) 40 41 71
PLUS (276) 63
MINUS (277) 64
MULT (278)
DIVISION (279)
ESMALLER (280) 67
SMALLER (281) 68
ELARGER (282) 65
LARGER (283) 66
EQUAL (284) 69
NEQUAL (285) 70
NOT (286) 61
SEMI (287) 1 2 15 16 20 23
COLON (288) 15 19 20 33 34 35 36 37 38 39 40 41
DOT (289)
ASSIGN (290) 24
COMMA (291) 5 50
POPEN (292) 17 43 46
PCLOSE (293) 17 43 46
BOPEN (294) 7 45
BCLOSE (295) 7 45
FOR (296) 40 41
EPSILON (297) 3 13 18 47
ELIF (298) 35 37


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
declarations (50)
    on left: 2 3, on right: 1 2 14
identifier_list (51)
    on left: 4 5, on right: 2 5 19 20
type (52)
    on left: 6 7, on right: 2 19 20
num (53)
    on left: 8 9, on right: 7
standard_type (54)
    on left: 10 11, on right: 6 7 15
subprogram_declarations (55)
    on left: 12 13, on right: 1 12
subprogram_declaration (56)
    on left: 14, on right: 12
subprogram_head (57)
    on left: 15 16, on right: 14
arguments (58)
    on left: 17 18, on right: 15 16
parameter_list (59)
    on left: 19 20, on right: 17 20
compound_statement (60)
    on left: 21, on right: 1 14 27
statement_list (61)
    on left: 22 23, on right: 21 23
statement (62)
    on left: 24 25 26 27 28 29 30 31 32, on right: 22 23 33 34 35 36
    37 38 39 40 41
if_statement (63)
    on left: 33 34, on right: 28
elif_statement (64)
    on left: 35 36 37, on right: 34 37
while_statement (65)
    on left: 38 39, on right: 29
for_statement (66)
    on left: 40 41, on right: 30
print_statement (67)
    on left: 42 43, on right: 25
variable (68)
    on left: 44 45, on right: 24 59
procedure_statement (69)
    on left: 46, on right: 26 60
actual_parameter_expression (70)
    on left: 47 48, on right: 46
expression_list (71)
    on left: 49 50, on right: 48 50
expression (72)
    on left: 51 52, on right: 24 31 33 34 35 37 38 39 40 41 43 45 49
    50
simple_expression (73)
    on left: 53 54, on right: 51 52 54
term (74)
    on left: 55 56, on right: 53 54 56
factor (75)
    on left: 57 58 59 60 61 62, on right: 55 56 61 62
sign (76)
    on left: 63 64, on right: 62
relop (77)
    on left: 65 66 67 68 69 70 71, on right: 52
addop (78)
    on left: 72 73, on right: 54
multop (79)
    on left: 74 75, on right: 56


State 0

    0 $accept: . program $end

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . ID SEMI declarations subprogram_declarations compound_statement

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: MAINPROG ID . SEMI declarations subprogram_declarations compound_statement

    SEMI  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: MAINPROG ID SEMI . declarations subprogram_declarations compound_statement

    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    EPSILON  shift, and go to state 8

    declarations   go to state 9
    type           go to state 10
    standard_type  go to state 11


State 6

   10 standard_type: INT .

    $default  reduce using rule 10 (standard_type)


State 7

   11 standard_type: FLOAT .

    $default  reduce using rule 11 (standard_type)


State 8

    3 declarations: EPSILON .

    $default  reduce using rule 3 (declarations)


State 9

    1 program: MAINPROG ID SEMI declarations . subprogram_declarations compound_statement

    FUNCTION   shift, and go to state 12
    PROCEDURE  shift, and go to state 13
    EPSILON    shift, and go to state 14

    subprogram_declarations  go to state 15
    subprogram_declaration   go to state 16
    subprogram_head          go to state 17


State 10

    2 declarations: type . identifier_list SEMI declarations

    ID  shift, and go to state 18

    identifier_list  go to state 19


State 11

    6 type: standard_type .
    7     | standard_type . BOPEN num BCLOSE

    BOPEN  shift, and go to state 20

    $default  reduce using rule 6 (type)


State 12

   15 subprogram_head: FUNCTION . ID arguments COLON standard_type SEMI

    ID  shift, and go to state 21


State 13

   16 subprogram_head: PROCEDURE . ID arguments SEMI

    ID  shift, and go to state 22


State 14

   13 subprogram_declarations: EPSILON .

    $default  reduce using rule 13 (subprogram_declarations)


State 15

    1 program: MAINPROG ID SEMI declarations subprogram_declarations . compound_statement

    BEGIN  shift, and go to state 23

    compound_statement  go to state 24


State 16

   12 subprogram_declarations: subprogram_declaration . subprogram_declarations

    FUNCTION   shift, and go to state 12
    PROCEDURE  shift, and go to state 13
    EPSILON    shift, and go to state 14

    subprogram_declarations  go to state 25
    subprogram_declaration   go to state 16
    subprogram_head          go to state 17


State 17

   14 subprogram_declaration: subprogram_head . declarations compound_statement

    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    EPSILON  shift, and go to state 8

    declarations   go to state 26
    type           go to state 10
    standard_type  go to state 11


State 18

    4 identifier_list: ID .
    5                | ID . COMMA identifier_list

    COMMA  shift, and go to state 27

    $default  reduce using rule 4 (identifier_list)


State 19

    2 declarations: type identifier_list . SEMI declarations

    SEMI  shift, and go to state 28


State 20

    7 type: standard_type BOPEN . num BCLOSE

    INTNUM    shift, and go to state 29
    FLOATNUM  shift, and go to state 30

    num  go to state 31


State 21

   15 subprogram_head: FUNCTION ID . arguments COLON standard_type SEMI

    POPEN    shift, and go to state 32
    EPSILON  shift, and go to state 33

    arguments  go to state 34


State 22

   16 subprogram_head: PROCEDURE ID . arguments SEMI

    POPEN    shift, and go to state 32
    EPSILON  shift, and go to state 33

    arguments  go to state 35


State 23

   21 compound_statement: BEGIN . statement_list END

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement_list       go to state 44
    statement            go to state 45
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 24

    1 program: MAINPROG ID SEMI declarations subprogram_declarations compound_statement .

    $default  reduce using rule 1 (program)


State 25

   12 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 12 (subprogram_declarations)


State 26

   14 subprogram_declaration: subprogram_head declarations . compound_statement

    BEGIN  shift, and go to state 23

    compound_statement  go to state 52


State 27

    5 identifier_list: ID COMMA . identifier_list

    ID  shift, and go to state 18

    identifier_list  go to state 53


State 28

    2 declarations: type identifier_list SEMI . declarations

    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    EPSILON  shift, and go to state 8

    declarations   go to state 54
    type           go to state 10
    standard_type  go to state 11


State 29

    8 num: INTNUM .

    $default  reduce using rule 8 (num)


State 30

    9 num: FLOATNUM .

    $default  reduce using rule 9 (num)


State 31

    7 type: standard_type BOPEN num . BCLOSE

    BCLOSE  shift, and go to state 55


State 32

   17 arguments: POPEN . parameter_list PCLOSE

    ID  shift, and go to state 18

    identifier_list  go to state 56
    parameter_list   go to state 57


State 33

   18 arguments: EPSILON .

    $default  reduce using rule 18 (arguments)


State 34

   15 subprogram_head: FUNCTION ID arguments . COLON standard_type SEMI

    COLON  shift, and go to state 58


State 35

   16 subprogram_head: PROCEDURE ID arguments . SEMI

    SEMI  shift, and go to state 59


State 36

   44 variable: ID .
   45         | ID . BOPEN expression BCLOSE
   46 procedure_statement: ID . POPEN actual_parameter_expression PCLOSE

    POPEN  shift, and go to state 60
    BOPEN  shift, and go to state 61

    $default  reduce using rule 44 (variable)


State 37

   33 if_statement: IF . expression COLON statement
   34             | IF . expression COLON statement elif_statement

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 69
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 38

   32 statement: NOP .

    $default  reduce using rule 32 (statement)


State 39

   38 while_statement: WHILE . expression COLON statement
   39                | WHILE . expression COLON statement ELSE statement

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 74
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 40

   31 statement: RETURN . expression

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 75
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 41

   42 print_statement: PRINT .
   43                | PRINT . POPEN expression PCLOSE

    POPEN  shift, and go to state 76

    $default  reduce using rule 42 (print_statement)


State 42

   40 for_statement: FOR . expression IN expression COLON statement
   41              | FOR . expression IN expression COLON statement ELSE statement

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 77
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 43

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


State 44

   21 compound_statement: BEGIN statement_list . END

    END  shift, and go to state 78


State 45

   22 statement_list: statement .
   23               | statement . SEMI statement_list

    SEMI  shift, and go to state 79

    $default  reduce using rule 22 (statement_list)


State 46

   28 statement: if_statement .

    $default  reduce using rule 28 (statement)


State 47

   29 statement: while_statement .

    $default  reduce using rule 29 (statement)


State 48

   30 statement: for_statement .

    $default  reduce using rule 30 (statement)


State 49

   25 statement: print_statement .

    $default  reduce using rule 25 (statement)


State 50

   24 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 80


State 51

   26 statement: procedure_statement .

    $default  reduce using rule 26 (statement)


State 52

   14 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 14 (subprogram_declaration)


State 53

    5 identifier_list: ID COMMA identifier_list .

    $default  reduce using rule 5 (identifier_list)


State 54

    2 declarations: type identifier_list SEMI declarations .

    $default  reduce using rule 2 (declarations)


State 55

    7 type: standard_type BOPEN num BCLOSE .

    $default  reduce using rule 7 (type)


State 56

   19 parameter_list: identifier_list . COLON type
   20               | identifier_list . COLON type SEMI parameter_list

    COLON  shift, and go to state 81


State 57

   17 arguments: POPEN parameter_list . PCLOSE

    PCLOSE  shift, and go to state 82


State 58

   15 subprogram_head: FUNCTION ID arguments COLON . standard_type SEMI

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    standard_type  go to state 83


State 59

   16 subprogram_head: PROCEDURE ID arguments SEMI .

    $default  reduce using rule 16 (subprogram_head)


State 60

   46 procedure_statement: ID POPEN . actual_parameter_expression PCLOSE

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66
    EPSILON   shift, and go to state 84

    variable                     go to state 67
    procedure_statement          go to state 68
    actual_parameter_expression  go to state 85
    expression_list              go to state 86
    expression                   go to state 87
    simple_expression            go to state 70
    term                         go to state 71
    factor                       go to state 72
    sign                         go to state 73


State 61

   45 variable: ID BOPEN . expression BCLOSE

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 88
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 62

   57 factor: INTNUM .

    $default  reduce using rule 57 (factor)


State 63

   58 factor: FLOATNUM .

    $default  reduce using rule 58 (factor)


State 64

   63 sign: PLUS .

    $default  reduce using rule 63 (sign)


State 65

   64 sign: MINUS .

    $default  reduce using rule 64 (sign)


State 66

   61 factor: NOT . factor

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    factor               go to state 89
    sign                 go to state 73


State 67

   59 factor: variable .

    $default  reduce using rule 59 (factor)


State 68

   60 factor: procedure_statement .

    $default  reduce using rule 60 (factor)


State 69

   33 if_statement: IF expression . COLON statement
   34             | IF expression . COLON statement elif_statement

    COLON  shift, and go to state 90


State 70

   51 expression: simple_expression .
   52           | simple_expression . relop simple_expression

    IN        shift, and go to state 91
    ESMALLER  shift, and go to state 92
    SMALLER   shift, and go to state 93
    ELARGER   shift, and go to state 94
    LARGER    shift, and go to state 95
    EQUAL     shift, and go to state 96
    NEQUAL    shift, and go to state 97

    IN        [reduce using rule 51 (expression)]
    $default  reduce using rule 51 (expression)

    relop  go to state 98


State 71

   53 simple_expression: term .
   54                  | term . addop simple_expression

    '+'  shift, and go to state 99
    '-'  shift, and go to state 100

    $default  reduce using rule 53 (simple_expression)

    addop  go to state 101


State 72

   55 term: factor .
   56     | factor . multop term

    '*'  shift, and go to state 102
    '/'  shift, and go to state 103

    $default  reduce using rule 55 (term)

    multop  go to state 104


State 73

   62 factor: sign . factor

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    factor               go to state 105
    sign                 go to state 73


State 74

   38 while_statement: WHILE expression . COLON statement
   39                | WHILE expression . COLON statement ELSE statement

    COLON  shift, and go to state 106


State 75

   31 statement: RETURN expression .

    $default  reduce using rule 31 (statement)


State 76

   43 print_statement: PRINT POPEN . expression PCLOSE

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 107
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 77

   40 for_statement: FOR expression . IN expression COLON statement
   41              | FOR expression . IN expression COLON statement ELSE statement

    IN  shift, and go to state 108


State 78

   21 compound_statement: BEGIN statement_list END .

    $default  reduce using rule 21 (compound_statement)


State 79

   23 statement_list: statement SEMI . statement_list

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement_list       go to state 109
    statement            go to state 45
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 80

   24 statement: variable ASSIGN . expression

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 110
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 81

   19 parameter_list: identifier_list COLON . type
   20               | identifier_list COLON . type SEMI parameter_list

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    type           go to state 111
    standard_type  go to state 11


State 82

   17 arguments: POPEN parameter_list PCLOSE .

    $default  reduce using rule 17 (arguments)


State 83

   15 subprogram_head: FUNCTION ID arguments COLON standard_type . SEMI

    SEMI  shift, and go to state 112


State 84

   47 actual_parameter_expression: EPSILON .

    $default  reduce using rule 47 (actual_parameter_expression)


State 85

   46 procedure_statement: ID POPEN actual_parameter_expression . PCLOSE

    PCLOSE  shift, and go to state 113


State 86

   48 actual_parameter_expression: expression_list .

    $default  reduce using rule 48 (actual_parameter_expression)


State 87

   49 expression_list: expression .
   50                | expression . COMMA expression_list

    COMMA  shift, and go to state 114

    $default  reduce using rule 49 (expression_list)


State 88

   45 variable: ID BOPEN expression . BCLOSE

    BCLOSE  shift, and go to state 115


State 89

   61 factor: NOT factor .

    $default  reduce using rule 61 (factor)


State 90

   33 if_statement: IF expression COLON . statement
   34             | IF expression COLON . statement elif_statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 116
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 91

   71 relop: IN .

    $default  reduce using rule 71 (relop)


State 92

   67 relop: ESMALLER .

    $default  reduce using rule 67 (relop)


State 93

   68 relop: SMALLER .

    $default  reduce using rule 68 (relop)


State 94

   65 relop: ELARGER .

    $default  reduce using rule 65 (relop)


State 95

   66 relop: LARGER .

    $default  reduce using rule 66 (relop)


State 96

   69 relop: EQUAL .

    $default  reduce using rule 69 (relop)


State 97

   70 relop: NEQUAL .

    $default  reduce using rule 70 (relop)


State 98

   52 expression: simple_expression relop . simple_expression

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    simple_expression    go to state 117
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 99

   72 addop: '+' .

    $default  reduce using rule 72 (addop)


State 100

   73 addop: '-' .

    $default  reduce using rule 73 (addop)


State 101

   54 simple_expression: term addop . simple_expression

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    simple_expression    go to state 118
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 102

   74 multop: '*' .

    $default  reduce using rule 74 (multop)


State 103

   75 multop: '/' .

    $default  reduce using rule 75 (multop)


State 104

   56 term: factor multop . term

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    term                 go to state 119
    factor               go to state 72
    sign                 go to state 73


State 105

   62 factor: sign factor .

    $default  reduce using rule 62 (factor)


State 106

   38 while_statement: WHILE expression COLON . statement
   39                | WHILE expression COLON . statement ELSE statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 120
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 107

   43 print_statement: PRINT POPEN expression . PCLOSE

    PCLOSE  shift, and go to state 121


State 108

   40 for_statement: FOR expression IN . expression COLON statement
   41              | FOR expression IN . expression COLON statement ELSE statement

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 122
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 109

   23 statement_list: statement SEMI statement_list .

    $default  reduce using rule 23 (statement_list)


State 110

   24 statement: variable ASSIGN expression .

    $default  reduce using rule 24 (statement)


State 111

   19 parameter_list: identifier_list COLON type .
   20               | identifier_list COLON type . SEMI parameter_list

    SEMI  shift, and go to state 123

    $default  reduce using rule 19 (parameter_list)


State 112

   15 subprogram_head: FUNCTION ID arguments COLON standard_type SEMI .

    $default  reduce using rule 15 (subprogram_head)


State 113

   46 procedure_statement: ID POPEN actual_parameter_expression PCLOSE .

    $default  reduce using rule 46 (procedure_statement)


State 114

   50 expression_list: expression COMMA . expression_list

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression_list      go to state 124
    expression           go to state 87
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 115

   45 variable: ID BOPEN expression BCLOSE .

    $default  reduce using rule 45 (variable)


State 116

   33 if_statement: IF expression COLON statement .
   34             | IF expression COLON statement . elif_statement

    ELSE  shift, and go to state 125
    ELIF  shift, and go to state 126

    ELSE      [reduce using rule 33 (if_statement)]
    ELIF      [reduce using rule 33 (if_statement)]
    $default  reduce using rule 33 (if_statement)

    elif_statement  go to state 127


State 117

   52 expression: simple_expression relop simple_expression .

    $default  reduce using rule 52 (expression)


State 118

   54 simple_expression: term addop simple_expression .

    $default  reduce using rule 54 (simple_expression)


State 119

   56 term: factor multop term .

    $default  reduce using rule 56 (term)


State 120

   38 while_statement: WHILE expression COLON statement .
   39                | WHILE expression COLON statement . ELSE statement

    ELSE  shift, and go to state 128

    ELSE      [reduce using rule 38 (while_statement)]
    $default  reduce using rule 38 (while_statement)


State 121

   43 print_statement: PRINT POPEN expression PCLOSE .

    $default  reduce using rule 43 (print_statement)


State 122

   40 for_statement: FOR expression IN expression . COLON statement
   41              | FOR expression IN expression . COLON statement ELSE statement

    COLON  shift, and go to state 129


State 123

   20 parameter_list: identifier_list COLON type SEMI . parameter_list

    ID  shift, and go to state 18

    identifier_list  go to state 56
    parameter_list   go to state 130


State 124

   50 expression_list: expression COMMA expression_list .

    $default  reduce using rule 50 (expression_list)


State 125

   36 elif_statement: ELSE . COLON statement

    COLON  shift, and go to state 131


State 126

   35 elif_statement: ELIF . expression COLON statement
   37               | ELIF . expression COLON statement elif_statement

    INTNUM    shift, and go to state 62
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 63
    PLUS      shift, and go to state 64
    MINUS     shift, and go to state 65
    NOT       shift, and go to state 66

    variable             go to state 67
    procedure_statement  go to state 68
    expression           go to state 132
    simple_expression    go to state 70
    term                 go to state 71
    factor               go to state 72
    sign                 go to state 73


State 127

   34 if_statement: IF expression COLON statement elif_statement .

    $default  reduce using rule 34 (if_statement)


State 128

   39 while_statement: WHILE expression COLON statement ELSE . statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 133
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 129

   40 for_statement: FOR expression IN expression COLON . statement
   41              | FOR expression IN expression COLON . statement ELSE statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 134
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 130

   20 parameter_list: identifier_list COLON type SEMI parameter_list .

    $default  reduce using rule 20 (parameter_list)


State 131

   36 elif_statement: ELSE COLON . statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 135
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 132

   35 elif_statement: ELIF expression . COLON statement
   37               | ELIF expression . COLON statement elif_statement

    COLON  shift, and go to state 136


State 133

   39 while_statement: WHILE expression COLON statement ELSE statement .

    $default  reduce using rule 39 (while_statement)


State 134

   40 for_statement: FOR expression IN expression COLON statement .
   41              | FOR expression IN expression COLON statement . ELSE statement

    ELSE  shift, and go to state 137

    ELSE      [reduce using rule 40 (for_statement)]
    $default  reduce using rule 40 (for_statement)


State 135

   36 elif_statement: ELSE COLON statement .

    $default  reduce using rule 36 (elif_statement)


State 136

   35 elif_statement: ELIF expression COLON . statement
   37               | ELIF expression COLON . statement elif_statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 138
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 137

   41 for_statement: FOR expression IN expression COLON statement ELSE . statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 139
    if_statement         go to state 46
    while_statement      go to state 47
    for_statement        go to state 48
    print_statement      go to state 49
    variable             go to state 50
    procedure_statement  go to state 51


State 138

   35 elif_statement: ELIF expression COLON statement .
   37               | ELIF expression COLON statement . elif_statement

    ELSE  shift, and go to state 125
    ELIF  shift, and go to state 126

    ELSE      [reduce using rule 35 (elif_statement)]
    ELIF      [reduce using rule 35 (elif_statement)]
    $default  reduce using rule 35 (elif_statement)

    elif_statement  go to state 140


State 139

   41 for_statement: FOR expression IN expression COLON statement ELSE statement .

    $default  reduce using rule 41 (for_statement)


State 140

   37 elif_statement: ELIF expression COLON statement elif_statement .

    $default  reduce using rule 37 (elif_statement)
