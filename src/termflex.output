Terminals unused in grammar

   THEN
   MULT
   DIVISION
   DOT


Grammar

    0 $accept: program $end

    1 program: MAINPROG ID SEMI declarations subprogram_declarations compound_statement

    2 declarations: type identifier_list SEMI declarations
    3             | EPSILON

    4 identifier_list: ID
    5                | ID COMMA identifier_list

    6 type: standard_type
    7     | standard_type BOPEN num BCLOSE

    8 num: INTNUM
    9    | FLOATNUM

   10 standard_type: INT
   11              | FLOAT

   12 subprogram_declarations: subprogram_declaration subprogram_declarations
   13                        | EPSILON

   14 subprogram_declaration: subprogram_head declarations compound_statement

   15 subprogram_head: FUNCTION ID arguments COLON standard_type SEMI
   16                | PROCEDURE ID arguments SEMI

   17 arguments: POPEN parameter_list PCLOSE
   18          | EPSILON

   19 parameter_list: identifier_list COLON type
   20               | identifier_list COLON type SEMI parameter_list

   21 compound_statement: BEGIN statement_list END

   22 statement_list: statement
   23               | statement SEMI statement_list

   24 statement: variable ASSIGN expression
   25          | print_statement
   26          | procedure_statement
   27          | compound_statement
   28          | RETURN expression
   29          | elsable_statement
   30          | NOP

   31 else_statement: ELSE COLON statement
   32               | EPSILON

   33 elsable_statement: if_statement else_statement
   34                  | while_statement else_statement
   35                  | for_statement else_statement

   36 if_statement: IF expression COLON statement elif_statement

   37 elif_statement: ELIF expression COLON statement elif_statement
   38               | EPSILON

   39 while_statement: WHILE expression COLON statement

   40 for_statement: FOR in_expression COLON statement

   41 print_statement: PRINT
   42                | PRINT POPEN expression PCLOSE

   43 variable: ID
   44         | ID BOPEN expression BCLOSE

   45 procedure_statement: ID POPEN actual_parameter_expression PCLOSE

   46 actual_parameter_expression: EPSILON
   47                            | expression_list

   48 expression_list: expression
   49                | expression COMMA expression_list

   50 expression: simple_expression
   51           | simple_expression relop simple_expression

   52 in_expression: expression IN expression

   53 simple_expression: term
   54                  | term addop simple_expression

   55 term: factor
   56     | factor multop term

   57 factor: INTNUM
   58       | FLOATNUM
   59       | variable
   60       | procedure_statement
   61       | NOT factor
   62       | sign factor

   63 sign: PLUS
   64     | MINUS

   65 relop: ELARGER
   66      | LARGER
   67      | ESMALLER
   68      | SMALLER
   69      | EQUAL
   70      | NEQUAL

   71 addop: '+'
   72      | '-'

   73 multop: '*'
   74       | '/'


Terminals, with rules where they appear

$end (0) 0
'*' (42) 73
'+' (43) 71
'-' (45) 72
'/' (47) 74
error (256)
INTNUM (258) 8 57
ID (259) 1 4 5 15 16 43 44 45
INT (260) 10
FLOAT (261) 11
FLOATNUM (262) 9 58
MAINPROG (263) 1
FUNCTION (264) 15
PROCEDURE (265) 16
BEGIN (266) 21
END (267) 21
IF (268) 36
THEN (269)
ELSE (270) 31
NOP (271) 30
WHILE (272) 39
RETURN (273) 28
PRINT (274) 41 42
IN (275) 52
PLUS (276) 63
MINUS (277) 64
MULT (278)
DIVISION (279)
ESMALLER (280) 67
SMALLER (281) 68
ELARGER (282) 65
LARGER (283) 66
EQUAL (284) 69
NEQUAL (285) 70
NOT (286) 61
SEMI (287) 1 2 15 16 20 23
COLON (288) 15 19 20 31 36 37 39 40
DOT (289)
ASSIGN (290) 24
COMMA (291) 5 49
POPEN (292) 17 42 45
PCLOSE (293) 17 42 45
BOPEN (294) 7 44
BCLOSE (295) 7 44
FOR (296) 40
EPSILON (297) 3 13 18 32 38 46
ELIF (298) 37


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
declarations (50)
    on left: 2 3, on right: 1 2 14
identifier_list (51)
    on left: 4 5, on right: 2 5 19 20
type (52)
    on left: 6 7, on right: 2 19 20
num (53)
    on left: 8 9, on right: 7
standard_type (54)
    on left: 10 11, on right: 6 7 15
subprogram_declarations (55)
    on left: 12 13, on right: 1 12
subprogram_declaration (56)
    on left: 14, on right: 12
subprogram_head (57)
    on left: 15 16, on right: 14
arguments (58)
    on left: 17 18, on right: 15 16
parameter_list (59)
    on left: 19 20, on right: 17 20
compound_statement (60)
    on left: 21, on right: 1 14 27
statement_list (61)
    on left: 22 23, on right: 21 23
statement (62)
    on left: 24 25 26 27 28 29 30, on right: 22 23 31 36 37 39 40
else_statement (63)
    on left: 31 32, on right: 33 34 35
elsable_statement (64)
    on left: 33 34 35, on right: 29
if_statement (65)
    on left: 36, on right: 33
elif_statement (66)
    on left: 37 38, on right: 36 37
while_statement (67)
    on left: 39, on right: 34
for_statement (68)
    on left: 40, on right: 35
print_statement (69)
    on left: 41 42, on right: 25
variable (70)
    on left: 43 44, on right: 24 59
procedure_statement (71)
    on left: 45, on right: 26 60
actual_parameter_expression (72)
    on left: 46 47, on right: 45
expression_list (73)
    on left: 48 49, on right: 47 49
expression (74)
    on left: 50 51, on right: 24 28 36 37 39 42 44 48 49 52
in_expression (75)
    on left: 52, on right: 40
simple_expression (76)
    on left: 53 54, on right: 50 51 54
term (77)
    on left: 55 56, on right: 53 54 56
factor (78)
    on left: 57 58 59 60 61 62, on right: 55 56 61 62
sign (79)
    on left: 63 64, on right: 62
relop (80)
    on left: 65 66 67 68 69 70, on right: 51
addop (81)
    on left: 71 72, on right: 54
multop (82)
    on left: 73 74, on right: 56


State 0

    0 $accept: . program $end

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . ID SEMI declarations subprogram_declarations compound_statement

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: MAINPROG ID . SEMI declarations subprogram_declarations compound_statement

    SEMI  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: MAINPROG ID SEMI . declarations subprogram_declarations compound_statement

    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    EPSILON  shift, and go to state 8

    declarations   go to state 9
    type           go to state 10
    standard_type  go to state 11


State 6

   10 standard_type: INT .

    $default  reduce using rule 10 (standard_type)


State 7

   11 standard_type: FLOAT .

    $default  reduce using rule 11 (standard_type)


State 8

    3 declarations: EPSILON .

    $default  reduce using rule 3 (declarations)


State 9

    1 program: MAINPROG ID SEMI declarations . subprogram_declarations compound_statement

    FUNCTION   shift, and go to state 12
    PROCEDURE  shift, and go to state 13
    EPSILON    shift, and go to state 14

    subprogram_declarations  go to state 15
    subprogram_declaration   go to state 16
    subprogram_head          go to state 17


State 10

    2 declarations: type . identifier_list SEMI declarations

    ID  shift, and go to state 18

    identifier_list  go to state 19


State 11

    6 type: standard_type .
    7     | standard_type . BOPEN num BCLOSE

    BOPEN  shift, and go to state 20

    $default  reduce using rule 6 (type)


State 12

   15 subprogram_head: FUNCTION . ID arguments COLON standard_type SEMI

    ID  shift, and go to state 21


State 13

   16 subprogram_head: PROCEDURE . ID arguments SEMI

    ID  shift, and go to state 22


State 14

   13 subprogram_declarations: EPSILON .

    $default  reduce using rule 13 (subprogram_declarations)


State 15

    1 program: MAINPROG ID SEMI declarations subprogram_declarations . compound_statement

    BEGIN  shift, and go to state 23

    compound_statement  go to state 24


State 16

   12 subprogram_declarations: subprogram_declaration . subprogram_declarations

    FUNCTION   shift, and go to state 12
    PROCEDURE  shift, and go to state 13
    EPSILON    shift, and go to state 14

    subprogram_declarations  go to state 25
    subprogram_declaration   go to state 16
    subprogram_head          go to state 17


State 17

   14 subprogram_declaration: subprogram_head . declarations compound_statement

    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    EPSILON  shift, and go to state 8

    declarations   go to state 26
    type           go to state 10
    standard_type  go to state 11


State 18

    4 identifier_list: ID .
    5                | ID . COMMA identifier_list

    COMMA  shift, and go to state 27

    $default  reduce using rule 4 (identifier_list)


State 19

    2 declarations: type identifier_list . SEMI declarations

    SEMI  shift, and go to state 28


State 20

    7 type: standard_type BOPEN . num BCLOSE

    INTNUM    shift, and go to state 29
    FLOATNUM  shift, and go to state 30

    num  go to state 31


State 21

   15 subprogram_head: FUNCTION ID . arguments COLON standard_type SEMI

    POPEN    shift, and go to state 32
    EPSILON  shift, and go to state 33

    arguments  go to state 34


State 22

   16 subprogram_head: PROCEDURE ID . arguments SEMI

    POPEN    shift, and go to state 32
    EPSILON  shift, and go to state 33

    arguments  go to state 35


State 23

   21 compound_statement: BEGIN . statement_list END

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement_list       go to state 44
    statement            go to state 45
    elsable_statement    go to state 46
    if_statement         go to state 47
    while_statement      go to state 48
    for_statement        go to state 49
    print_statement      go to state 50
    variable             go to state 51
    procedure_statement  go to state 52


State 24

    1 program: MAINPROG ID SEMI declarations subprogram_declarations compound_statement .

    $default  reduce using rule 1 (program)


State 25

   12 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 12 (subprogram_declarations)


State 26

   14 subprogram_declaration: subprogram_head declarations . compound_statement

    BEGIN  shift, and go to state 23

    compound_statement  go to state 53


State 27

    5 identifier_list: ID COMMA . identifier_list

    ID  shift, and go to state 18

    identifier_list  go to state 54


State 28

    2 declarations: type identifier_list SEMI . declarations

    INT      shift, and go to state 6
    FLOAT    shift, and go to state 7
    EPSILON  shift, and go to state 8

    declarations   go to state 55
    type           go to state 10
    standard_type  go to state 11


State 29

    8 num: INTNUM .

    $default  reduce using rule 8 (num)


State 30

    9 num: FLOATNUM .

    $default  reduce using rule 9 (num)


State 31

    7 type: standard_type BOPEN num . BCLOSE

    BCLOSE  shift, and go to state 56


State 32

   17 arguments: POPEN . parameter_list PCLOSE

    ID  shift, and go to state 18

    identifier_list  go to state 57
    parameter_list   go to state 58


State 33

   18 arguments: EPSILON .

    $default  reduce using rule 18 (arguments)


State 34

   15 subprogram_head: FUNCTION ID arguments . COLON standard_type SEMI

    COLON  shift, and go to state 59


State 35

   16 subprogram_head: PROCEDURE ID arguments . SEMI

    SEMI  shift, and go to state 60


State 36

   43 variable: ID .
   44         | ID . BOPEN expression BCLOSE
   45 procedure_statement: ID . POPEN actual_parameter_expression PCLOSE

    POPEN  shift, and go to state 61
    BOPEN  shift, and go to state 62

    $default  reduce using rule 43 (variable)


State 37

   36 if_statement: IF . expression COLON statement elif_statement

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 70
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 38

   30 statement: NOP .

    $default  reduce using rule 30 (statement)


State 39

   39 while_statement: WHILE . expression COLON statement

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 75
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 40

   28 statement: RETURN . expression

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 76
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 41

   41 print_statement: PRINT .
   42                | PRINT . POPEN expression PCLOSE

    POPEN  shift, and go to state 77

    $default  reduce using rule 41 (print_statement)


State 42

   40 for_statement: FOR . in_expression COLON statement

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 78
    in_expression        go to state 79
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 43

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


State 44

   21 compound_statement: BEGIN statement_list . END

    END  shift, and go to state 80


State 45

   22 statement_list: statement .
   23               | statement . SEMI statement_list

    SEMI  shift, and go to state 81

    $default  reduce using rule 22 (statement_list)


State 46

   29 statement: elsable_statement .

    $default  reduce using rule 29 (statement)


State 47

   33 elsable_statement: if_statement . else_statement

    ELSE     shift, and go to state 82
    EPSILON  shift, and go to state 83

    else_statement  go to state 84


State 48

   34 elsable_statement: while_statement . else_statement

    ELSE     shift, and go to state 82
    EPSILON  shift, and go to state 83

    else_statement  go to state 85


State 49

   35 elsable_statement: for_statement . else_statement

    ELSE     shift, and go to state 82
    EPSILON  shift, and go to state 83

    else_statement  go to state 86


State 50

   25 statement: print_statement .

    $default  reduce using rule 25 (statement)


State 51

   24 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 87


State 52

   26 statement: procedure_statement .

    $default  reduce using rule 26 (statement)


State 53

   14 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 14 (subprogram_declaration)


State 54

    5 identifier_list: ID COMMA identifier_list .

    $default  reduce using rule 5 (identifier_list)


State 55

    2 declarations: type identifier_list SEMI declarations .

    $default  reduce using rule 2 (declarations)


State 56

    7 type: standard_type BOPEN num BCLOSE .

    $default  reduce using rule 7 (type)


State 57

   19 parameter_list: identifier_list . COLON type
   20               | identifier_list . COLON type SEMI parameter_list

    COLON  shift, and go to state 88


State 58

   17 arguments: POPEN parameter_list . PCLOSE

    PCLOSE  shift, and go to state 89


State 59

   15 subprogram_head: FUNCTION ID arguments COLON . standard_type SEMI

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    standard_type  go to state 90


State 60

   16 subprogram_head: PROCEDURE ID arguments SEMI .

    $default  reduce using rule 16 (subprogram_head)


State 61

   45 procedure_statement: ID POPEN . actual_parameter_expression PCLOSE

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67
    EPSILON   shift, and go to state 91

    variable                     go to state 68
    procedure_statement          go to state 69
    actual_parameter_expression  go to state 92
    expression_list              go to state 93
    expression                   go to state 94
    simple_expression            go to state 71
    term                         go to state 72
    factor                       go to state 73
    sign                         go to state 74


State 62

   44 variable: ID BOPEN . expression BCLOSE

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 95
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 63

   57 factor: INTNUM .

    $default  reduce using rule 57 (factor)


State 64

   58 factor: FLOATNUM .

    $default  reduce using rule 58 (factor)


State 65

   63 sign: PLUS .

    $default  reduce using rule 63 (sign)


State 66

   64 sign: MINUS .

    $default  reduce using rule 64 (sign)


State 67

   61 factor: NOT . factor

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    factor               go to state 96
    sign                 go to state 74


State 68

   59 factor: variable .

    $default  reduce using rule 59 (factor)


State 69

   60 factor: procedure_statement .

    $default  reduce using rule 60 (factor)


State 70

   36 if_statement: IF expression . COLON statement elif_statement

    COLON  shift, and go to state 97


State 71

   50 expression: simple_expression .
   51           | simple_expression . relop simple_expression

    ESMALLER  shift, and go to state 98
    SMALLER   shift, and go to state 99
    ELARGER   shift, and go to state 100
    LARGER    shift, and go to state 101
    EQUAL     shift, and go to state 102
    NEQUAL    shift, and go to state 103

    $default  reduce using rule 50 (expression)

    relop  go to state 104


State 72

   53 simple_expression: term .
   54                  | term . addop simple_expression

    '+'  shift, and go to state 105
    '-'  shift, and go to state 106

    $default  reduce using rule 53 (simple_expression)

    addop  go to state 107


State 73

   55 term: factor .
   56     | factor . multop term

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109

    $default  reduce using rule 55 (term)

    multop  go to state 110


State 74

   62 factor: sign . factor

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    factor               go to state 111
    sign                 go to state 74


State 75

   39 while_statement: WHILE expression . COLON statement

    COLON  shift, and go to state 112


State 76

   28 statement: RETURN expression .

    $default  reduce using rule 28 (statement)


State 77

   42 print_statement: PRINT POPEN . expression PCLOSE

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 113
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 78

   52 in_expression: expression . IN expression

    IN  shift, and go to state 114


State 79

   40 for_statement: FOR in_expression . COLON statement

    COLON  shift, and go to state 115


State 80

   21 compound_statement: BEGIN statement_list END .

    $default  reduce using rule 21 (compound_statement)


State 81

   23 statement_list: statement SEMI . statement_list

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement_list       go to state 116
    statement            go to state 45
    elsable_statement    go to state 46
    if_statement         go to state 47
    while_statement      go to state 48
    for_statement        go to state 49
    print_statement      go to state 50
    variable             go to state 51
    procedure_statement  go to state 52


State 82

   31 else_statement: ELSE . COLON statement

    COLON  shift, and go to state 117


State 83

   32 else_statement: EPSILON .

    $default  reduce using rule 32 (else_statement)


State 84

   33 elsable_statement: if_statement else_statement .

    $default  reduce using rule 33 (elsable_statement)


State 85

   34 elsable_statement: while_statement else_statement .

    $default  reduce using rule 34 (elsable_statement)


State 86

   35 elsable_statement: for_statement else_statement .

    $default  reduce using rule 35 (elsable_statement)


State 87

   24 statement: variable ASSIGN . expression

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 118
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 88

   19 parameter_list: identifier_list COLON . type
   20               | identifier_list COLON . type SEMI parameter_list

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    type           go to state 119
    standard_type  go to state 11


State 89

   17 arguments: POPEN parameter_list PCLOSE .

    $default  reduce using rule 17 (arguments)


State 90

   15 subprogram_head: FUNCTION ID arguments COLON standard_type . SEMI

    SEMI  shift, and go to state 120


State 91

   46 actual_parameter_expression: EPSILON .

    $default  reduce using rule 46 (actual_parameter_expression)


State 92

   45 procedure_statement: ID POPEN actual_parameter_expression . PCLOSE

    PCLOSE  shift, and go to state 121


State 93

   47 actual_parameter_expression: expression_list .

    $default  reduce using rule 47 (actual_parameter_expression)


State 94

   48 expression_list: expression .
   49                | expression . COMMA expression_list

    COMMA  shift, and go to state 122

    $default  reduce using rule 48 (expression_list)


State 95

   44 variable: ID BOPEN expression . BCLOSE

    BCLOSE  shift, and go to state 123


State 96

   61 factor: NOT factor .

    $default  reduce using rule 61 (factor)


State 97

   36 if_statement: IF expression COLON . statement elif_statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 124
    elsable_statement    go to state 46
    if_statement         go to state 47
    while_statement      go to state 48
    for_statement        go to state 49
    print_statement      go to state 50
    variable             go to state 51
    procedure_statement  go to state 52


State 98

   67 relop: ESMALLER .

    $default  reduce using rule 67 (relop)


State 99

   68 relop: SMALLER .

    $default  reduce using rule 68 (relop)


State 100

   65 relop: ELARGER .

    $default  reduce using rule 65 (relop)


State 101

   66 relop: LARGER .

    $default  reduce using rule 66 (relop)


State 102

   69 relop: EQUAL .

    $default  reduce using rule 69 (relop)


State 103

   70 relop: NEQUAL .

    $default  reduce using rule 70 (relop)


State 104

   51 expression: simple_expression relop . simple_expression

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    simple_expression    go to state 125
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 105

   71 addop: '+' .

    $default  reduce using rule 71 (addop)


State 106

   72 addop: '-' .

    $default  reduce using rule 72 (addop)


State 107

   54 simple_expression: term addop . simple_expression

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    simple_expression    go to state 126
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 108

   73 multop: '*' .

    $default  reduce using rule 73 (multop)


State 109

   74 multop: '/' .

    $default  reduce using rule 74 (multop)


State 110

   56 term: factor multop . term

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    term                 go to state 127
    factor               go to state 73
    sign                 go to state 74


State 111

   62 factor: sign factor .

    $default  reduce using rule 62 (factor)


State 112

   39 while_statement: WHILE expression COLON . statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 128
    elsable_statement    go to state 46
    if_statement         go to state 47
    while_statement      go to state 48
    for_statement        go to state 49
    print_statement      go to state 50
    variable             go to state 51
    procedure_statement  go to state 52


State 113

   42 print_statement: PRINT POPEN expression . PCLOSE

    PCLOSE  shift, and go to state 129


State 114

   52 in_expression: expression IN . expression

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 130
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 115

   40 for_statement: FOR in_expression COLON . statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 131
    elsable_statement    go to state 46
    if_statement         go to state 47
    while_statement      go to state 48
    for_statement        go to state 49
    print_statement      go to state 50
    variable             go to state 51
    procedure_statement  go to state 52


State 116

   23 statement_list: statement SEMI statement_list .

    $default  reduce using rule 23 (statement_list)


State 117

   31 else_statement: ELSE COLON . statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 132
    elsable_statement    go to state 46
    if_statement         go to state 47
    while_statement      go to state 48
    for_statement        go to state 49
    print_statement      go to state 50
    variable             go to state 51
    procedure_statement  go to state 52


State 118

   24 statement: variable ASSIGN expression .

    $default  reduce using rule 24 (statement)


State 119

   19 parameter_list: identifier_list COLON type .
   20               | identifier_list COLON type . SEMI parameter_list

    SEMI  shift, and go to state 133

    $default  reduce using rule 19 (parameter_list)


State 120

   15 subprogram_head: FUNCTION ID arguments COLON standard_type SEMI .

    $default  reduce using rule 15 (subprogram_head)


State 121

   45 procedure_statement: ID POPEN actual_parameter_expression PCLOSE .

    $default  reduce using rule 45 (procedure_statement)


State 122

   49 expression_list: expression COMMA . expression_list

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression_list      go to state 134
    expression           go to state 94
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 123

   44 variable: ID BOPEN expression BCLOSE .

    $default  reduce using rule 44 (variable)


State 124

   36 if_statement: IF expression COLON statement . elif_statement

    EPSILON  shift, and go to state 135
    ELIF     shift, and go to state 136

    elif_statement  go to state 137


State 125

   51 expression: simple_expression relop simple_expression .

    $default  reduce using rule 51 (expression)


State 126

   54 simple_expression: term addop simple_expression .

    $default  reduce using rule 54 (simple_expression)


State 127

   56 term: factor multop term .

    $default  reduce using rule 56 (term)


State 128

   39 while_statement: WHILE expression COLON statement .

    $default  reduce using rule 39 (while_statement)


State 129

   42 print_statement: PRINT POPEN expression PCLOSE .

    $default  reduce using rule 42 (print_statement)


State 130

   52 in_expression: expression IN expression .

    $default  reduce using rule 52 (in_expression)


State 131

   40 for_statement: FOR in_expression COLON statement .

    $default  reduce using rule 40 (for_statement)


State 132

   31 else_statement: ELSE COLON statement .

    $default  reduce using rule 31 (else_statement)


State 133

   20 parameter_list: identifier_list COLON type SEMI . parameter_list

    ID  shift, and go to state 18

    identifier_list  go to state 57
    parameter_list   go to state 138


State 134

   49 expression_list: expression COMMA expression_list .

    $default  reduce using rule 49 (expression_list)


State 135

   38 elif_statement: EPSILON .

    $default  reduce using rule 38 (elif_statement)


State 136

   37 elif_statement: ELIF . expression COLON statement elif_statement

    INTNUM    shift, and go to state 63
    ID        shift, and go to state 36
    FLOATNUM  shift, and go to state 64
    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    NOT       shift, and go to state 67

    variable             go to state 68
    procedure_statement  go to state 69
    expression           go to state 139
    simple_expression    go to state 71
    term                 go to state 72
    factor               go to state 73
    sign                 go to state 74


State 137

   36 if_statement: IF expression COLON statement elif_statement .

    $default  reduce using rule 36 (if_statement)


State 138

   20 parameter_list: identifier_list COLON type SEMI parameter_list .

    $default  reduce using rule 20 (parameter_list)


State 139

   37 elif_statement: ELIF expression . COLON statement elif_statement

    COLON  shift, and go to state 140


State 140

   37 elif_statement: ELIF expression COLON . statement elif_statement

    ID      shift, and go to state 36
    BEGIN   shift, and go to state 23
    IF      shift, and go to state 37
    NOP     shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    PRINT   shift, and go to state 41
    FOR     shift, and go to state 42

    compound_statement   go to state 43
    statement            go to state 141
    elsable_statement    go to state 46
    if_statement         go to state 47
    while_statement      go to state 48
    for_statement        go to state 49
    print_statement      go to state 50
    variable             go to state 51
    procedure_statement  go to state 52


State 141

   37 elif_statement: ELIF expression COLON statement . elif_statement

    EPSILON  shift, and go to state 135
    ELIF     shift, and go to state 136

    elif_statement  go to state 142


State 142

   37 elif_statement: ELIF expression COLON statement elif_statement .

    $default  reduce using rule 37 (elif_statement)
