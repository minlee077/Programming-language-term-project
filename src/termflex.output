Terminals unused in grammar

   THEN
   MULT
   DIVISION
   DOT


State 42 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 133 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: MAINPROG ID SEMI declarations subprogram_declarations compound_statement

    2 declarations: type identifier_list SEMI declarations
    3             | %empty

    4 identifier_list: ID
    5                | ID COMMA identifier_list

    6 type: standard_type
    7     | standard_type BOPEN INTNUM BCLOSE

    8 standard_type: INT
    9              | FLOAT

   10 subprogram_declarations: subprogram_declaration subprogram_declarations
   11                        | %empty

   12 subprogram_declaration: subprogram_head declarations compound_statement

   13 subprogram_head: FUNCTION ID arguments COLON standard_type SEMI
   14                | PROCEDURE ID arguments SEMI

   15 arguments: POPEN parameter_list PCLOSE
   16          | %empty

   17 parameter_list: identifier_list COLON type
   18               | identifier_list COLON type SEMI parameter_list

   19 compound_statement: START statement_list END

   20 statement_list: statement
   21               | statement SEMI statement_list

   22 statement: variable ASSIGN expression
   23          | print_statement
   24          | procedure_statement
   25          | compound_statement
   26          | RETURN expression
   27          | elsable_statement
   28          | NOP

   29 else_statement: ELSE COLON statement
   30               | %empty

   31 elsable_statement: if_statement else_statement
   32                  | while_statement else_statement
   33                  | for_statement else_statement

   34 if_statement: IF expression COLON statement elif_statement

   35 elif_statement: ELIF expression COLON statement elif_statement
   36               | %empty

   37 while_statement: WHILE expression COLON statement

   38 for_statement: FOR in_expression COLON statement

   39 print_statement: PRINT
   40                | PRINT POPEN expression PCLOSE

   41 variable: ID
   42         | ID BOPEN expression BCLOSE

   43 procedure_statement: ID POPEN actual_parameter_expression PCLOSE

   44 actual_parameter_expression: %empty
   45                            | expression_list

   46 expression_list: expression
   47                | expression COMMA expression_list

   48 expression: simple_expression
   49           | simple_expression relop simple_expression

   50 in_expression: expression IN expression

   51 simple_expression: term
   52                  | term addop simple_expression

   53 term: factor
   54     | factor multop term

   55 factor: INTNUM
   56       | FLOATNUM
   57       | variable
   58       | procedure_statement
   59       | NOT factor
   60       | sign factor

   61 sign: PLUS
   62     | MINUS

   63 relop: ELARGER
   64      | LARGER
   65      | ESMALLER
   66      | SMALLER
   67      | EQUAL
   68      | NEQUAL

   69 addop: '+'
   70      | '-'

   71 multop: '*'
   72       | '/'


Terminals, with rules where they appear

$end (0) 0
'*' (42) 71
'+' (43) 69
'-' (45) 70
'/' (47) 72
error (256)
INTNUM (258) 7 55
ID (259) 1 4 5 13 14 41 42 43
INT (260) 8
FLOAT (261) 9
FLOATNUM (262) 56
MAINPROG (263) 1
FUNCTION (264) 13
PROCEDURE (265) 14
START (266) 19
END (267) 19
IF (268) 34
THEN (269)
ELSE (270) 29
NOP (271) 28
WHILE (272) 37
RETURN (273) 26
PRINT (274) 39 40
IN (275) 50
PLUS (276) 61
MINUS (277) 62
MULT (278)
DIVISION (279)
ESMALLER (280) 65
SMALLER (281) 66
ELARGER (282) 63
LARGER (283) 64
EQUAL (284) 67
NEQUAL (285) 68
NOT (286) 59
SEMI (287) 1 2 13 14 18 21
COLON (288) 13 17 18 29 34 35 37 38
DOT (289)
ASSIGN (290) 22
COMMA (291) 5 47
POPEN (292) 15 40 43
PCLOSE (293) 15 40 43
BOPEN (294) 7 42
BCLOSE (295) 7 42
FOR (296) 38
ELIF (297) 35


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
declarations (49)
    on left: 2 3, on right: 1 2 12
identifier_list (50)
    on left: 4 5, on right: 2 5 17 18
type (51)
    on left: 6 7, on right: 2 17 18
standard_type (52)
    on left: 8 9, on right: 6 7 13
subprogram_declarations (53)
    on left: 10 11, on right: 1 10
subprogram_declaration (54)
    on left: 12, on right: 10
subprogram_head (55)
    on left: 13 14, on right: 12
arguments (56)
    on left: 15 16, on right: 13 14
parameter_list (57)
    on left: 17 18, on right: 15 18
compound_statement (58)
    on left: 19, on right: 1 12 25
statement_list (59)
    on left: 20 21, on right: 19 21
statement (60)
    on left: 22 23 24 25 26 27 28, on right: 20 21 29 34 35 37 38
else_statement (61)
    on left: 29 30, on right: 31 32 33
elsable_statement (62)
    on left: 31 32 33, on right: 27
if_statement (63)
    on left: 34, on right: 31
elif_statement (64)
    on left: 35 36, on right: 34 35
while_statement (65)
    on left: 37, on right: 32
for_statement (66)
    on left: 38, on right: 33
print_statement (67)
    on left: 39 40, on right: 23
variable (68)
    on left: 41 42, on right: 22 57
procedure_statement (69)
    on left: 43, on right: 24 58
actual_parameter_expression (70)
    on left: 44 45, on right: 43
expression_list (71)
    on left: 46 47, on right: 45 47
expression (72)
    on left: 48 49, on right: 22 26 34 35 37 40 42 46 47 50
in_expression (73)
    on left: 50, on right: 38
simple_expression (74)
    on left: 51 52, on right: 48 49 52
term (75)
    on left: 53 54, on right: 51 52 54
factor (76)
    on left: 55 56 57 58 59 60, on right: 53 54 59 60
sign (77)
    on left: 61 62, on right: 60
relop (78)
    on left: 63 64 65 66 67 68, on right: 49
addop (79)
    on left: 69 70, on right: 52
multop (80)
    on left: 71 72, on right: 54


State 0

    0 $accept: . program $end

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . ID SEMI declarations subprogram_declarations compound_statement

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: MAINPROG ID . SEMI declarations subprogram_declarations compound_statement

    SEMI  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: MAINPROG ID SEMI . declarations subprogram_declarations compound_statement

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 8
    type           go to state 9
    standard_type  go to state 10


State 6

    8 standard_type: INT .

    $default  reduce using rule 8 (standard_type)


State 7

    9 standard_type: FLOAT .

    $default  reduce using rule 9 (standard_type)


State 8

    1 program: MAINPROG ID SEMI declarations . subprogram_declarations compound_statement

    FUNCTION   shift, and go to state 11
    PROCEDURE  shift, and go to state 12

    $default  reduce using rule 11 (subprogram_declarations)

    subprogram_declarations  go to state 13
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


State 9

    2 declarations: type . identifier_list SEMI declarations

    ID  shift, and go to state 16

    identifier_list  go to state 17


State 10

    6 type: standard_type .
    7     | standard_type . BOPEN INTNUM BCLOSE

    BOPEN  shift, and go to state 18

    $default  reduce using rule 6 (type)


State 11

   13 subprogram_head: FUNCTION . ID arguments COLON standard_type SEMI

    ID  shift, and go to state 19


State 12

   14 subprogram_head: PROCEDURE . ID arguments SEMI

    ID  shift, and go to state 20


State 13

    1 program: MAINPROG ID SEMI declarations subprogram_declarations . compound_statement

    START  shift, and go to state 21

    compound_statement  go to state 22


State 14

   10 subprogram_declarations: subprogram_declaration . subprogram_declarations

    FUNCTION   shift, and go to state 11
    PROCEDURE  shift, and go to state 12

    $default  reduce using rule 11 (subprogram_declarations)

    subprogram_declarations  go to state 23
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


State 15

   12 subprogram_declaration: subprogram_head . declarations compound_statement

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 24
    type           go to state 9
    standard_type  go to state 10


State 16

    4 identifier_list: ID .
    5                | ID . COMMA identifier_list

    COMMA  shift, and go to state 25

    $default  reduce using rule 4 (identifier_list)


State 17

    2 declarations: type identifier_list . SEMI declarations

    SEMI  shift, and go to state 26


State 18

    7 type: standard_type BOPEN . INTNUM BCLOSE

    INTNUM  shift, and go to state 27


State 19

   13 subprogram_head: FUNCTION ID . arguments COLON standard_type SEMI

    POPEN  shift, and go to state 28

    $default  reduce using rule 16 (arguments)

    arguments  go to state 29


State 20

   14 subprogram_head: PROCEDURE ID . arguments SEMI

    POPEN  shift, and go to state 28

    $default  reduce using rule 16 (arguments)

    arguments  go to state 30


State 21

   19 compound_statement: START . statement_list END

    ID      shift, and go to state 31
    START   shift, and go to state 21
    IF      shift, and go to state 32
    NOP     shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    FOR     shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 39
    statement            go to state 40
    elsable_statement    go to state 41
    if_statement         go to state 42
    while_statement      go to state 43
    for_statement        go to state 44
    print_statement      go to state 45
    variable             go to state 46
    procedure_statement  go to state 47


State 22

    1 program: MAINPROG ID SEMI declarations subprogram_declarations compound_statement .

    $default  reduce using rule 1 (program)


State 23

   10 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 10 (subprogram_declarations)


State 24

   12 subprogram_declaration: subprogram_head declarations . compound_statement

    START  shift, and go to state 21

    compound_statement  go to state 48


State 25

    5 identifier_list: ID COMMA . identifier_list

    ID  shift, and go to state 16

    identifier_list  go to state 49


State 26

    2 declarations: type identifier_list SEMI . declarations

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 50
    type           go to state 9
    standard_type  go to state 10


State 27

    7 type: standard_type BOPEN INTNUM . BCLOSE

    BCLOSE  shift, and go to state 51


State 28

   15 arguments: POPEN . parameter_list PCLOSE

    ID  shift, and go to state 16

    identifier_list  go to state 52
    parameter_list   go to state 53


State 29

   13 subprogram_head: FUNCTION ID arguments . COLON standard_type SEMI

    COLON  shift, and go to state 54


State 30

   14 subprogram_head: PROCEDURE ID arguments . SEMI

    SEMI  shift, and go to state 55


State 31

   41 variable: ID .
   42         | ID . BOPEN expression BCLOSE
   43 procedure_statement: ID . POPEN actual_parameter_expression PCLOSE

    POPEN  shift, and go to state 56
    BOPEN  shift, and go to state 57

    $default  reduce using rule 41 (variable)


State 32

   34 if_statement: IF . expression COLON statement elif_statement

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 65
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 33

   28 statement: NOP .

    $default  reduce using rule 28 (statement)


State 34

   37 while_statement: WHILE . expression COLON statement

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 70
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 35

   26 statement: RETURN . expression

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 71
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 36

   39 print_statement: PRINT .
   40                | PRINT . POPEN expression PCLOSE

    POPEN  shift, and go to state 72

    $default  reduce using rule 39 (print_statement)


State 37

   38 for_statement: FOR . in_expression COLON statement

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 73
    in_expression        go to state 74
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 38

   25 statement: compound_statement .

    $default  reduce using rule 25 (statement)


State 39

   19 compound_statement: START statement_list . END

    END  shift, and go to state 75


State 40

   20 statement_list: statement .
   21               | statement . SEMI statement_list

    SEMI  shift, and go to state 76

    $default  reduce using rule 20 (statement_list)


State 41

   27 statement: elsable_statement .

    $default  reduce using rule 27 (statement)


State 42

   31 elsable_statement: if_statement . else_statement

    ELSE  shift, and go to state 77

    ELSE      [reduce using rule 30 (else_statement)]
    $default  reduce using rule 30 (else_statement)

    else_statement  go to state 78


State 43

   32 elsable_statement: while_statement . else_statement

    ELSE  shift, and go to state 77

    ELSE      [reduce using rule 30 (else_statement)]
    $default  reduce using rule 30 (else_statement)

    else_statement  go to state 79


State 44

   33 elsable_statement: for_statement . else_statement

    ELSE  shift, and go to state 77

    ELSE      [reduce using rule 30 (else_statement)]
    $default  reduce using rule 30 (else_statement)

    else_statement  go to state 80


State 45

   23 statement: print_statement .

    $default  reduce using rule 23 (statement)


State 46

   22 statement: variable . ASSIGN expression

    ASSIGN  shift, and go to state 81


State 47

   24 statement: procedure_statement .

    $default  reduce using rule 24 (statement)


State 48

   12 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 12 (subprogram_declaration)


State 49

    5 identifier_list: ID COMMA identifier_list .

    $default  reduce using rule 5 (identifier_list)


State 50

    2 declarations: type identifier_list SEMI declarations .

    $default  reduce using rule 2 (declarations)


State 51

    7 type: standard_type BOPEN INTNUM BCLOSE .

    $default  reduce using rule 7 (type)


State 52

   17 parameter_list: identifier_list . COLON type
   18               | identifier_list . COLON type SEMI parameter_list

    COLON  shift, and go to state 82


State 53

   15 arguments: POPEN parameter_list . PCLOSE

    PCLOSE  shift, and go to state 83


State 54

   13 subprogram_head: FUNCTION ID arguments COLON . standard_type SEMI

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    standard_type  go to state 84


State 55

   14 subprogram_head: PROCEDURE ID arguments SEMI .

    $default  reduce using rule 14 (subprogram_head)


State 56

   43 procedure_statement: ID POPEN . actual_parameter_expression PCLOSE

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    $default  reduce using rule 44 (actual_parameter_expression)

    variable                     go to state 63
    procedure_statement          go to state 64
    actual_parameter_expression  go to state 85
    expression_list              go to state 86
    expression                   go to state 87
    simple_expression            go to state 66
    term                         go to state 67
    factor                       go to state 68
    sign                         go to state 69


State 57

   42 variable: ID BOPEN . expression BCLOSE

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 88
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 58

   55 factor: INTNUM .

    $default  reduce using rule 55 (factor)


State 59

   56 factor: FLOATNUM .

    $default  reduce using rule 56 (factor)


State 60

   61 sign: PLUS .

    $default  reduce using rule 61 (sign)


State 61

   62 sign: MINUS .

    $default  reduce using rule 62 (sign)


State 62

   59 factor: NOT . factor

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    factor               go to state 89
    sign                 go to state 69


State 63

   57 factor: variable .

    $default  reduce using rule 57 (factor)


State 64

   58 factor: procedure_statement .

    $default  reduce using rule 58 (factor)


State 65

   34 if_statement: IF expression . COLON statement elif_statement

    COLON  shift, and go to state 90


State 66

   48 expression: simple_expression .
   49           | simple_expression . relop simple_expression

    ESMALLER  shift, and go to state 91
    SMALLER   shift, and go to state 92
    ELARGER   shift, and go to state 93
    LARGER    shift, and go to state 94
    EQUAL     shift, and go to state 95
    NEQUAL    shift, and go to state 96

    $default  reduce using rule 48 (expression)

    relop  go to state 97


State 67

   51 simple_expression: term .
   52                  | term . addop simple_expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99

    $default  reduce using rule 51 (simple_expression)

    addop  go to state 100


State 68

   53 term: factor .
   54     | factor . multop term

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 53 (term)

    multop  go to state 103


State 69

   60 factor: sign . factor

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    factor               go to state 104
    sign                 go to state 69


State 70

   37 while_statement: WHILE expression . COLON statement

    COLON  shift, and go to state 105


State 71

   26 statement: RETURN expression .

    $default  reduce using rule 26 (statement)


State 72

   40 print_statement: PRINT POPEN . expression PCLOSE

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 106
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 73

   50 in_expression: expression . IN expression

    IN  shift, and go to state 107


State 74

   38 for_statement: FOR in_expression . COLON statement

    COLON  shift, and go to state 108


State 75

   19 compound_statement: START statement_list END .

    $default  reduce using rule 19 (compound_statement)


State 76

   21 statement_list: statement SEMI . statement_list

    ID      shift, and go to state 31
    START   shift, and go to state 21
    IF      shift, and go to state 32
    NOP     shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    FOR     shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 109
    statement            go to state 40
    elsable_statement    go to state 41
    if_statement         go to state 42
    while_statement      go to state 43
    for_statement        go to state 44
    print_statement      go to state 45
    variable             go to state 46
    procedure_statement  go to state 47


State 77

   29 else_statement: ELSE . COLON statement

    COLON  shift, and go to state 110


State 78

   31 elsable_statement: if_statement else_statement .

    $default  reduce using rule 31 (elsable_statement)


State 79

   32 elsable_statement: while_statement else_statement .

    $default  reduce using rule 32 (elsable_statement)


State 80

   33 elsable_statement: for_statement else_statement .

    $default  reduce using rule 33 (elsable_statement)


State 81

   22 statement: variable ASSIGN . expression

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 111
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 82

   17 parameter_list: identifier_list COLON . type
   18               | identifier_list COLON . type SEMI parameter_list

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7

    type           go to state 112
    standard_type  go to state 10


State 83

   15 arguments: POPEN parameter_list PCLOSE .

    $default  reduce using rule 15 (arguments)


State 84

   13 subprogram_head: FUNCTION ID arguments COLON standard_type . SEMI

    SEMI  shift, and go to state 113


State 85

   43 procedure_statement: ID POPEN actual_parameter_expression . PCLOSE

    PCLOSE  shift, and go to state 114


State 86

   45 actual_parameter_expression: expression_list .

    $default  reduce using rule 45 (actual_parameter_expression)


State 87

   46 expression_list: expression .
   47                | expression . COMMA expression_list

    COMMA  shift, and go to state 115

    $default  reduce using rule 46 (expression_list)


State 88

   42 variable: ID BOPEN expression . BCLOSE

    BCLOSE  shift, and go to state 116


State 89

   59 factor: NOT factor .

    $default  reduce using rule 59 (factor)


State 90

   34 if_statement: IF expression COLON . statement elif_statement

    ID      shift, and go to state 31
    START   shift, and go to state 21
    IF      shift, and go to state 32
    NOP     shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    FOR     shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 117
    elsable_statement    go to state 41
    if_statement         go to state 42
    while_statement      go to state 43
    for_statement        go to state 44
    print_statement      go to state 45
    variable             go to state 46
    procedure_statement  go to state 47


State 91

   65 relop: ESMALLER .

    $default  reduce using rule 65 (relop)


State 92

   66 relop: SMALLER .

    $default  reduce using rule 66 (relop)


State 93

   63 relop: ELARGER .

    $default  reduce using rule 63 (relop)


State 94

   64 relop: LARGER .

    $default  reduce using rule 64 (relop)


State 95

   67 relop: EQUAL .

    $default  reduce using rule 67 (relop)


State 96

   68 relop: NEQUAL .

    $default  reduce using rule 68 (relop)


State 97

   49 expression: simple_expression relop . simple_expression

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    simple_expression    go to state 118
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 98

   69 addop: '+' .

    $default  reduce using rule 69 (addop)


State 99

   70 addop: '-' .

    $default  reduce using rule 70 (addop)


State 100

   52 simple_expression: term addop . simple_expression

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    simple_expression    go to state 119
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 101

   71 multop: '*' .

    $default  reduce using rule 71 (multop)


State 102

   72 multop: '/' .

    $default  reduce using rule 72 (multop)


State 103

   54 term: factor multop . term

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    term                 go to state 120
    factor               go to state 68
    sign                 go to state 69


State 104

   60 factor: sign factor .

    $default  reduce using rule 60 (factor)


State 105

   37 while_statement: WHILE expression COLON . statement

    ID      shift, and go to state 31
    START   shift, and go to state 21
    IF      shift, and go to state 32
    NOP     shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    FOR     shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 121
    elsable_statement    go to state 41
    if_statement         go to state 42
    while_statement      go to state 43
    for_statement        go to state 44
    print_statement      go to state 45
    variable             go to state 46
    procedure_statement  go to state 47


State 106

   40 print_statement: PRINT POPEN expression . PCLOSE

    PCLOSE  shift, and go to state 122


State 107

   50 in_expression: expression IN . expression

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 123
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 108

   38 for_statement: FOR in_expression COLON . statement

    ID      shift, and go to state 31
    START   shift, and go to state 21
    IF      shift, and go to state 32
    NOP     shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    FOR     shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 124
    elsable_statement    go to state 41
    if_statement         go to state 42
    while_statement      go to state 43
    for_statement        go to state 44
    print_statement      go to state 45
    variable             go to state 46
    procedure_statement  go to state 47


State 109

   21 statement_list: statement SEMI statement_list .

    $default  reduce using rule 21 (statement_list)


State 110

   29 else_statement: ELSE COLON . statement

    ID      shift, and go to state 31
    START   shift, and go to state 21
    IF      shift, and go to state 32
    NOP     shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    FOR     shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 125
    elsable_statement    go to state 41
    if_statement         go to state 42
    while_statement      go to state 43
    for_statement        go to state 44
    print_statement      go to state 45
    variable             go to state 46
    procedure_statement  go to state 47


State 111

   22 statement: variable ASSIGN expression .

    $default  reduce using rule 22 (statement)


State 112

   17 parameter_list: identifier_list COLON type .
   18               | identifier_list COLON type . SEMI parameter_list

    SEMI  shift, and go to state 126

    $default  reduce using rule 17 (parameter_list)


State 113

   13 subprogram_head: FUNCTION ID arguments COLON standard_type SEMI .

    $default  reduce using rule 13 (subprogram_head)


State 114

   43 procedure_statement: ID POPEN actual_parameter_expression PCLOSE .

    $default  reduce using rule 43 (procedure_statement)


State 115

   47 expression_list: expression COMMA . expression_list

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression_list      go to state 127
    expression           go to state 87
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 116

   42 variable: ID BOPEN expression BCLOSE .

    $default  reduce using rule 42 (variable)


State 117

   34 if_statement: IF expression COLON statement . elif_statement

    ELIF  shift, and go to state 128

    ELIF      [reduce using rule 36 (elif_statement)]
    $default  reduce using rule 36 (elif_statement)

    elif_statement  go to state 129


State 118

   49 expression: simple_expression relop simple_expression .

    $default  reduce using rule 49 (expression)


State 119

   52 simple_expression: term addop simple_expression .

    $default  reduce using rule 52 (simple_expression)


State 120

   54 term: factor multop term .

    $default  reduce using rule 54 (term)


State 121

   37 while_statement: WHILE expression COLON statement .

    $default  reduce using rule 37 (while_statement)


State 122

   40 print_statement: PRINT POPEN expression PCLOSE .

    $default  reduce using rule 40 (print_statement)


State 123

   50 in_expression: expression IN expression .

    $default  reduce using rule 50 (in_expression)


State 124

   38 for_statement: FOR in_expression COLON statement .

    $default  reduce using rule 38 (for_statement)


State 125

   29 else_statement: ELSE COLON statement .

    $default  reduce using rule 29 (else_statement)


State 126

   18 parameter_list: identifier_list COLON type SEMI . parameter_list

    ID  shift, and go to state 16

    identifier_list  go to state 52
    parameter_list   go to state 130


State 127

   47 expression_list: expression COMMA expression_list .

    $default  reduce using rule 47 (expression_list)


State 128

   35 elif_statement: ELIF . expression COLON statement elif_statement

    INTNUM    shift, and go to state 58
    ID        shift, and go to state 31
    FLOATNUM  shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    NOT       shift, and go to state 62

    variable             go to state 63
    procedure_statement  go to state 64
    expression           go to state 131
    simple_expression    go to state 66
    term                 go to state 67
    factor               go to state 68
    sign                 go to state 69


State 129

   34 if_statement: IF expression COLON statement elif_statement .

    $default  reduce using rule 34 (if_statement)


State 130

   18 parameter_list: identifier_list COLON type SEMI parameter_list .

    $default  reduce using rule 18 (parameter_list)


State 131

   35 elif_statement: ELIF expression . COLON statement elif_statement

    COLON  shift, and go to state 132


State 132

   35 elif_statement: ELIF expression COLON . statement elif_statement

    ID      shift, and go to state 31
    START   shift, and go to state 21
    IF      shift, and go to state 32
    NOP     shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    FOR     shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 133
    elsable_statement    go to state 41
    if_statement         go to state 42
    while_statement      go to state 43
    for_statement        go to state 44
    print_statement      go to state 45
    variable             go to state 46
    procedure_statement  go to state 47


State 133

   35 elif_statement: ELIF expression COLON statement . elif_statement

    ELIF  shift, and go to state 128

    ELIF      [reduce using rule 36 (elif_statement)]
    $default  reduce using rule 36 (elif_statement)

    elif_statement  go to state 134


State 134

   35 elif_statement: ELIF expression COLON statement elif_statement .

    $default  reduce using rule 35 (elif_statement)
